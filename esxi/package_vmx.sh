#!/bin/bash

# Usage:  package_vmx /myvms/win.vmx [5905]
# $1 should be the vmx to package
# if $2 present, it should be the vnc port to add, otherwise vnc will not be added
package_vmx() {
	vmx=$1
	echo "Packaging vmx file:$vmx"
	if [ -n "$2" ];then
		# a vnc port was provided, let's use it and use a hardcoded password for now
		# NOTE:  You may need to adjust the esxi firewall (for certain versions of esxi)
		#		To do so, checkout the here document at the end of this script
		vnc_port=$2
		vnc_pass="lab"
		# Remove all vnc related lines
		echo "Removing vnc references"
		sed -i '/RemoteDisplay.vnc.*/d' $vmx > /dev/null 2>&1
		# now add them back (except vnc.key) with our stuff
		echo "Adding new vnc references back in"
		echo "RemoteDisplay.vnc.enabled = \"true\"" >> $vmx
		echo "RemoteDisplay.vnc.port = \"$vnc_port\"" >> $vmx
		echo "RemoteDisplay.vnc.password = \"$vnc_pass\"" >> $vmx
	fi

	#
	# All the items below will get regenerated once the vm is booted for the first time
	#

	# Remove remnants of an autogenerated mac address
	echo "Removing mac address and uuid references"
	sed -i '/ethernet0.generatedAddress/d' $vmx > /dev/null 2>&1
	sed -i '/ethernet0.addressType/d' $vmx > /dev/null 2>&1
	sed -i '/uuid.location/d' $vmx > /dev/null 2>&1
	sed -i '/uuid.bios/d' $vmx > /dev/null 2>&1

	# Remove derived name
	echo "Removing derivedName"
	sed -i '/sched.swap.derivedName/d' $vmx > /dev/null 2>&1
}

package_vmx "$@"
echo "Done."

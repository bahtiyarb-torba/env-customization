# By default, this file will affect the PS1 shell prompt

#
# Build a more complex dev shell prompt
#

debug "git_ruby_shell_additions"

# Load RVM into a shell session *as a function* (if non-system-wide install)
rvm_func="$HOME/.rvm/scripts/rvm"
if [ -x "$rvm_func" -a -s "$rvm_func" ]; then
  source "$rvm_func"
  # Add RVM to PATH for scripting
  export PATH=$PATH:$HOME/.rvm/bin
fi

# Git and RVM prompting
git-current-branch() {
  # do not put spaces in these messages
  local MSG_NOT_GIT_REPO="not_repo"
  local MSG_GIT_UNAVAILABLE="git_unavail"

  if which git &> /dev/null; then
    if git branch &> /dev/null; then
      git branch 2> /dev/null | grep \* | cut -d ' ' -f 2-
    else
      echo $MSG_NOT_GIT_REPO
    fi
  else
    echo $MSG_GIT_UNAVAILABLE
  fi
}

orig_prompt="$PS1"
#orig_prompt="[\u@\h \W]\\$ " # set this to "$PS1" to preserve your current prompt
#bold_prompt="\[$(tput bold)\][\u@\h \W]\\$ "
BOLD="\[$(tput bold)\]"
REGULAR="\[$(tput sgr0)\]"
export shorten="14" # set to '' for no shortening, otherwise number of chars to display for long inputs

# shorten a string passed as $1 to the length given as $2
shorten() {
  str="$1"
  len=$2
  #if $str -eq "metasploit-framework"; then
  #  echo "msf"
  #else
  echo $str | cut -c 1-$len
  #fi
}

# check if the shorten variable has a value, if so, send $1 to be shortened
check_shorten() {
  if [ -n "$shorten"  ]; then # this will explode if shorten is 0, but I don't care
    echo "$(shorten $1 $shorten)"
  else
    echo $1
  fi
}

# add git branch info, shortened, to the shell prompt
prompt_git() {
  local ps=$BOLD
  ps="${ps}(\$(check_shorten \$(git-current-branch)))"
  ps="${ps}${REGULAR}$orig_prompt"
  export PS1="$ps"
}

# add ruby ver info, shortened, to the shell prompt
prompt_ruby() {
  if which rvm &> /dev/null; then
    local ps=$BOLD
    ps="${ps}(\$(check_shorten \$(~/.rvm/bin/rvm-prompt v p g)))"
    ps="${ps}${REGULAR}$orig_prompt"
    export PS1="$ps"
  else
    export PS1="(no rvm)$orig_prompt"
  fi
}

# add both git branch and ruby ver info, shortened, to the shell prompt
prompt_git_ruby() {
  local ps=$BOLD
  if which rvm &> /dev/null; then
    ps="${ps}(\$(check_shorten \$(~/.rvm/bin/rvm-prompt v p g)))"
  fi
  if which git &> /dev/null; then
    ps="${ps}(\$(check_shorten \$(git-current-branch)))"
  fi
  ps="${ps}${REGULAR}$orig_prompt"
  export PS1="$ps"
}

# actually change the prompt
prompt_git_ruby

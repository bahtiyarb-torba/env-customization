#
# Functions used to change or display the proxy state
#

debug "proxystate.rc"

# investigate function is repeated here for portability but, we
# only define it if investigate isn't already a defined function
if ! type -t investigate &> /dev/null; then
  debug "investigate function was not previously declared, doing so now"
  # allows you to easily debug variables as varname:varvalue or similar
  investigate() {
  # if $3 isn't given, don't prefix output with anything
  local output_prefix='' # could be something like [*]
  if [ -n "$3" ]; then output_prefix="$3";fi

  # if $2 isn't given, default separator to something
  local output_sep=": " # could be ", " ": " etc
  if [ -n "$2" ]; then output_sep="$2";fi

  # if $1 is given, then good, if not, well jeez, don't do anything
  local var2investigate=''
  if [ -n "$1" ]; then
    var2investigate="$1"
    echo -n "${output_prefix}${var2investigate}${output_sep}"
    v='echo -n $'
    v="${v}$(echo -n $var2investigate)"
    eval $v
    echo
  fi
  }

  export -f investigate
fi

# establish proxy site values from either env or set it explicitly
# establish your own https proxy if different than http
if [ -n "$MYPROXY" ]; then
  prox="$MYPROXY"
else
  prox="http://your-proxy-here.com:8080"
fi
# NOTE, we don't read the MYPROXY value at function runtime to help prevent
#   malicious use of the MYPROXY env var.  If you want to re-define the proxies
#   either by re-reading MYPROXY or changing the prox var, re-source this file
proxyon() {
  export http_proxy=$prox
  export https_proxy=$prox # use diff val here if https is diff from http
}
proxyoff() {
  unset http_proxy
  unset https_proxy
}

# Display the state of the proxy variables
proxystate() {
  local HTTP="off"
  local HTTPS="off"
  local SOCKS="off"
  if export | grep -q http_proxy;then
    HTTP=$http_proxy
  fi
  if export | grep -q https_proxy;then
    HTTPS=$https_proxy
  fi
  if export | grep -q socks_proxy;then
    SOCKS=$socks_proxy
  fi
  # Show the current state of proxy variables
  vars2show="HTTP HTTPS SOCKS"
  for proto in $vars2show; do investigate $proto;done
}
export -f proxystate

#
# BASH drop directory hook
#

orig_indent=$indent
current="load_drop_directories.rc"
debug "Running inside $current"

run_scripts()
{
  script_dir="$1"
  if [ -d $script_dir ]; then
    for script in $(ls "$script_dir"/S*.rc 2>/dev/null | sort); do
      debug "Checking for $script"
      # skip non-existent (regular), non-executable, or zero-length files
      if [ -f "$script" -a -x "$script" -a -s "$script" ]; then
        debug "Sourcing $script"
        indent+="$INDENT_VAL"
        source $script
        if [ "$?" -ne "0" ]; then
          # display error even if debug is off
          echo "$indent$script returned error code $?"
          indent=$orig_indent
        else
          debug "$script completed successfully"
          indent=$orig_indent
        fi
      else
        local msg="$script was not executed because it's either not a regular file,"
        msg+=" it's not executable, or it has a zero length."
        debug "$msg"
      fi
    done
  else
    debug "$script_dir does not exist"
  fi
}
export -f run_scripts

# run bashrc.d files first, code there is usually more setup-oriented
drop_dirs="$HOME/bashrc.d $HOME/private.d $HOME/aliases.d $HOME/functions.d"
for d in $drop_dirs; do
  debug "Loading drop directory:$d"
  run_scripts "$d"
  # NOTE:  make sure scripts export -f any functions you want available to child processes
done
# Git and RVM prompting
function git-current-branch {
  git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/(\1) /'
}
#export PS1="[\$(~/.rvm/bin/rvm-prompt v p g)] \$(git-current-branch)$PS1"
orig_prompt="[\u@\h \W]\\$ "
bold_prompt="\[$(tput bold)\][\u@\h \W]\\$ "
bold="\[$(tput bold)\]"
regular="\[$(tput sgr0)\]"
shorten="14" # set to '' for no shortening, otherwise number of chars to display for long inputs

function shorten {
  str="$1"
  len=$2
  #if $str -eq "metasploit-framework"; then
  #  echo "msf"
  #else
  echo $str | cut -c 1-$len
  #fi
}

function check_shorten {
  if [ -n "$shorten"  ]; then # this will explode if shorten is 0, but I don't care
    echo "$(shorten $1 $shorten))" # add the closing paren back on
  else
    echo $1
  fi
}

function prompt_git {
  local ps=$bold
  ps=${ps}$(check_shorten "$(git-current-branch)")
  ps="${ps}${regular}$orig_prompt"
  export PS1="$ps"
}

function prompt_ruby {
  local ps=$bold
  ps=${ps}$(check_shorten "($(~/.rvm/bin/rvm-prompt v p g))")
  ps="${ps}${regular}$orig_prompt"
  export PS1="$ps"
}

function prompt_git_ruby {
  local ps=$bold 
  ps=${ps}$(check_shorten "($(~/.rvm/bin/rvm-prompt v p g))")$(check_shorten "$(git-current-branch)")
  ps="${ps}${regular}$orig_prompt"
  export PS1="$ps"
}

prompt_git_ruby
